#!/usr/bin/env perl
# Takes input on stdin and copies it to stdout, truncating to the width of the
# terminal as needed.  This is very similar to cut -c1-${COLUMNS} except that
# this script attempts to understand a limited set of terminal escape sequences
# so that colorized output isn't prematurely truncated.
#
# See the bottom of this file for license information (MIT License).
#
# Author: Dave Goodell <davidjgoodell@gmail.com>
#
# TODO:
# - add support for determining the terminal size via Term::ReadKey
# - possibly support a broader set of escape sequences
# - consider including a reset sequence when truncating lines with escapes

use strict;
use warnings;

use Getopt::Long;

my $columns = `tput cols`;
chomp($columns);

if ($columns and $ENV{TERM} eq "cygwin") {
    # use one less than the number of columns when running on Windows under
    # cygwin.  Thanks to Ingo Karkat: https://github.com/goodell/nowrap/issues/2
    --$columns;
}

$columns = 80 unless $columns;

GetOptions(
    "help" => \&print_usage_and_exit,
    "columns=i" => \$columns,
) or die "unable to parse options, stopped";

while (my $line = <>) {
    my $extra_bytes = 0;
    # not correct, see web page
    while ($line =~ m/(\e\[\d*(;\d+)*m)/g) {
        my $escape_sequence = $1;
        if ((length($`) - length($extra_bytes)) > $columns) {
            last;
        }
        $extra_bytes += length $escape_sequence;
    }

    # remove newline always and put it back in always to
    # handle the short line case
    chomp $line;
    print substr($line, 0, ($columns + $extra_bytes)) . "\n";
}

sub hexdump {
    my $str = shift;

    my @chars = split //, $str;
    return join(':', map {sprintf("%02x", ord($_))} @chars);
}

sub print_usage_and_exit {
    print <<EOT;
Usage: $0 [--columns=N] [FILE]...

Takes data on standard input or in any specified files and dumps it to
standard output similar to cat or cut.  However, all output will be
truncated to the current terminal width (according to `tput cols') to
prevent long output lines from wrapping.  This is very similar to
`cut -c1-\${COLUMNS}' but it should work better to interpret terminal
color attributes.
EOT
    exit 1;
}

# Copyright (c) 2009 Dave Goodell
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following
# conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
